#include <stdio.h>
#include <ctype.h> // Include this header for the toupper function

void printBoard();
int checkWin();

char board[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};

int main() {
    char response;

    do {
        int player = 1, input, status = -1;
        printBoard();

        while (status == -1) {
            player = (player % 2 == 0) ? 2 : 1;
            char mark = (player == 1) ? 'X' : 'O';
            printf("Please enter Number For Player %d\n", player);
            scanf("%d", &input);

            if (input < 1 || input > 9) {
                printf("Invalid input\n");
            } else if (board[input] == 'X' || board[input] == 'O') {
                printf("Cell already filled. Choose another one.\n");
            } else {
                board[input] = mark;
                printBoard();
                int result = checkWin();
                if (result == 1) {
                    printf("Player %d is the Winner\n", player);
                    status = 1;
                } else if (result == 0) {
                    printf("It's a draw!\n");
                    status = 0;
                }
                player++;
            }
        }

        printf("\nWould you like to play again? (Y/N): ");
        scanf(" %c", &response);
        response = toupper(response);

        // Reset the board for the new game
        for (int i = 1; i <= 9; i++) {
            board[i] = i + '0';
        }

    } while (response == 'Y');

    printf("Thanks for playing!\n");

    return 0;
}

void printBoard() {
    // Consider using a cross-platform method to clear the screen
    // system("cls");  // Might not work on all systems
    printf("\n\n");
    printf("=== TIC TAC TOE ===\n\n");
    printf("     |     |     \n");
    printf("  %c  |  %c  |  %c  \n", board[1], board[2], board[3]);
    printf("_____|_____|_____\n");
    printf("     |     |     \n");
    printf("  %c  |  %c  |  %c  \n", board[4], board[5], board[6]);
    printf("_____|_____|_____\n");
    printf("     |     |     \n");
    printf("  %c  |  %c  |  %c  \n", board[7], board[8], board[9]);
    printf("     |     |     \n");
    printf("\n\n");
}

int checkWin() {
    if(board[1]==board[2] && board[2]==board[3]){
        return 1;
    }
    if(board[1]==board[4] && board[4]==board[7]){
        return 1;
    }
    if(board[7]==board[8] && board[8]==board[9]){
        return 1;
    }
    if(board[3]==board[6] && board[6]==board[9]){
        return 1;
    }
    if(board[1]==board[5] && board[5]==board[9]){
        return 1;
    }
    if(board[3]==board[5] && board[5]==board[7]){
        return 1;
    }
    if(board[2]==board[5] && board[5]==board[8]){
        return 1;
    }
    if(board[4]==board[5] && board[5]==board[6]){
        return 1;
    }
   int count=0;
    for (int i = 1; i <=9; i++)
    {
        if(board[i]=='X' || board[i]=='O'){
            count++;
        }
    }
   if(count==9){
        return 0;
    }
    return -1;
}